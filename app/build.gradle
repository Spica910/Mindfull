plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.geminiapp'
    compileSdk 34

    Properties properties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        properties.load(rootProject.file("local.properties").newDataInputStream())
    } else {
        // Fallback if local.properties is missing, though the goal is to create it.
        // This could also throw an error or use a default non-functional key.
        // For this subtask, we assume local.properties will be created.
        println "Warning: local.properties file not found. GEMINI_API_KEY will not be set from it."
    }

    buildFeatures { // Ensuring buildFeatures is before defaultConfig, or as per standard practice
        buildConfig true
    }

    defaultConfig {
        applicationId "com.example.geminiapp"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Ensure GEMINI_API_KEY is not null or empty before assigning to prevent build issues
        def apiKey = properties.getProperty("GEMINI_API_KEY")
        if (apiKey == null) apiKey = "MISSING_API_KEY" // Default or placeholder if not found

        buildConfigField "String", "GEMINI_API_KEY", "\"${apiKey}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0' // Material Design
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Gemini API (placeholder - specific library may vary)
    implementation "com.google.ai.client:google-ai-lib:0.0.1" // Example, replace with actual Gemini SDK

    // CameraX libraries
    def camerax_version = "1.3.0" // Use the latest stable version
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.camera:camera-extensions:$camerax_version"
}
